/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package predatorpreysimulator;

import java.awt.Color;
import java.awt.GridLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.Point;

/**
 *
 * @author mcstutzman
 */
public class SimulationPanel extends javax.swing.JPanel {
    public CellPanel[][] grid;
    public Organism[][] oGrid;
    SimulationFrame simFrame;
    PredatorPreySimulator sim;
    //int numOfRows, numOfCols, numOfDoodlebugs, numOfAnts;
    /**
     * Creates new form SimulationPanel
     */
    public SimulationPanel(PredatorPreySimulator newSim, SimulationFrame sf) {
        initComponents();
        simFrame=sf;
        setVisible(true);
        sim = newSim;
        
        simPanel.setLayout(new GridLayout(sim.numOfRows, sim.numOfCols, 0, 0));
        grid = new CellPanel[sim.numOfRows][sim.numOfCols];        
        for (int i = 0; i < sim.numOfRows; i++) {
            for (int j = 0; j < sim.numOfCols; j++) {
                grid[i][j] = new CellPanel(i,j);                
                simPanel.add(grid[i][j]);
            }
        }
        sim.setGrid(grid);
        sim.addOrgs();
        //sim.toString();
        
        

        /**grid[(int)(Math.random()*numOfRows)][(int)(Math.random()*numOfCols)].setType("doodlebugs");
        grid[(int)(Math.random()*numOfRows)][(int)(Math.random()*numOfCols)].setType("ants");
        grid[(int)(Math.random()*numOfRows)][(int)(Math.random()*numOfCols)].setType("ants");
        grid[(int)(Math.random()*numOfRows)][(int)(Math.random()*numOfCols)].setType("doodlebugs");
        grid[(int)(Math.random()*numOfRows)][(int)(Math.random()*numOfCols)].setType("ants");*/
        
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        NextButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        simPanel = new javax.swing.JPanel();

        NextButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/next.png"))); // NOI18N
        NextButton.setText("Next step");
        NextButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NextButtonActionPerformed(evt);
            }
        });

        simPanel.setLayout(null);
        jScrollPane1.setViewportView(simPanel);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(NextButton, javax.swing.GroupLayout.DEFAULT_SIZE, 889, Short.MAX_VALUE)
            .addComponent(jScrollPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 549, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(NextButton, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void NextButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NextButtonActionPerformed
        // TODO add your handling code here:
        final int row = (int)(Math.random()*sim.numOfRows); 
        final int col = (int)(Math.random()*sim.numOfCols);
        
        sim.turnCounter++;
        for (int i = 0; i < sim.numOfRows; i++){
            for (int j = 0; j < sim.numOfCols; j++){
                
                if (sim.oGrid[i][j] instanceof Doodlebug){
                    sim.oGrid[i][j].move();
                    
                }
                else{
                    
                }
            }            
        }
        for (int i = 0; i < sim.numOfRows; i++){
            for (int j = 0; j < sim.numOfCols; j++){
                
                if (sim.oGrid[i][j] instanceof Ant){
                    sim.oGrid[i][j].move();
                }
                else{                    
                }
            }
        }
        for (int i = 0; i < sim.numOfRows; i++){
            for (int j = 0; j < sim.numOfCols; j++){
                if (sim.oGrid[i][j] instanceof Organism){
                    sim.oGrid[i][j].breed();
                }
                else{
                    
                }
            }
        }
        for (int i = 0; i < sim.numOfRows; i++){
            for (int j = 0; j < sim.numOfCols; j++){                
                if (sim.oGrid[i][j] instanceof Doodlebug){
                    sim.oGrid[i][j].starve();
                }
            }
        }
        //grid[row][col].setBackground(Color.blue);     
        //the following code implemets a timer
        javax.swing.Timer t = new javax.swing.Timer(500, new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                for (int i = 0; i < sim.numOfRows; i++){
                    for (int j = 0; j < sim.numOfCols; j++){
                        grid[i][j].setBackground(Color.white);             
                    }
                }
            }
        });
        t.setRepeats(false);
        t.start();
    }//GEN-LAST:event_NextButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton NextButton;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel simPanel;
    // End of variables declaration//GEN-END:variables
}
